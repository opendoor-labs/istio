#
# addon prometheus configuration
#
enabled: true
replicaCount: 1
hub: docker.io/prom
tag: v2.8.0
retention: 6h
nodeSelector: {}
tolerations: []

# Specify the pod anti-affinity that allows you to constrain which nodes
# your pod is eligible to be scheduled based on labels on pods that are
# already running on the node rather than based on labels on nodes.
# There are currently two types of anti-affinity:
#    "requiredDuringSchedulingIgnoredDuringExecution"
#    "preferredDuringSchedulingIgnoredDuringExecution"
# which denote “hard” vs. “soft” requirements, you can define your values
# in "podAntiAffinityLabelSelector" and "podAntiAffinityTermLabelSelector"
# correspondingly.
# For example:
# podAntiAffinityLabelSelector:
# - key: security
#   operator: In
#   values: S1,S2
#   topologyKey: "kubernetes.io/hostname"
# This pod anti-affinity rule says that the pod requires not to be scheduled
# onto a node if that node is already running a pod with label having key
# “security” and value “S1”.
podAntiAffinityLabelSelector: []
podAntiAffinityTermLabelSelector: []

# Controls the frequency of prometheus scraping
scrapeInterval: 15s

contextPath: /prometheus

ingress:
  enabled: false
  ## Used to create an Ingress record.
  hosts:
    - prometheus.local
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: prometheus-tls
    #   hosts:
    #     - prometheus.local

service:
  annotations: {}
  nodePort:
    enabled: false
    port: 32090

security:
  enabled: true

emptyDir:
    sizeLimit: ""

persistentVolume:
  # If true, Prometheus will create/use a Persistent Volume Claim
  # If false, use emptyDir
  enabled: false
  # Prometheus server data Persistent Volume access modes
  accessModes:
    - ReadWriteOnce
  annotations: {}
  # Prometheus data Persistent Volume existing claim name
  # Requires server.persistentVolume.enabled: true
  # If defined, PVC must be created before volume will be bound
  existingClaim: ""
  # Prometheus data Persistent Volume mount root path
  mountPath: /data
  # Persistent Volume size
  size: 8Gi
